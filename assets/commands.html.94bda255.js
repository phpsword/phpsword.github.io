import{_ as o,r as c,o as i,c as l,b as s,d as e,w as t,e as n,a as p}from"./app.2c384c7c.js";const u={},d=s("h1",{id:"commands-for-wp-cli",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#commands-for-wp-cli","aria-hidden":"true"},"#"),n(" Commands for WP-CLI")],-1),r=n("Sword commands are automatically loaded so you don't need to include them in your "),k=s("code",null,"functions.php",-1),m=n(" of your theme. They are "),v=s("code",null,"WordpressService",-1),b=n(" classes under the hood."),h=p(`<h2 id="create-a-command" tabindex="-1"><a class="header-anchor" href="#create-a-command" aria-hidden="true">#</a> Create a command</h2><p>To create a WP-CLI command, the only thing to do is to create a class extending <code>WordpressCommand</code>.</p><p>Try this by creating this file in your Sword project: <code>src/Wordpress/Command/TweetCommand.php</code>.</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">declare</span><span class="token punctuation">(</span>strict_types<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Wordpress<span class="token punctuation">\\</span>Command</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Sword<span class="token punctuation">\\</span>SwordBundle<span class="token punctuation">\\</span>Attribute<span class="token punctuation">\\</span>AsWordpressCommand</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Sword<span class="token punctuation">\\</span>SwordBundle<span class="token punctuation">\\</span>Command<span class="token punctuation">\\</span>WordpressCommand</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">WP_CLI</span><span class="token punctuation">;</span>

<span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">AsWordpressCommand</span><span class="token punctuation">(</span><span class="token attribute-class-name class-name">name</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;tweet&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">TweetCommand</span> <span class="token keyword">extends</span> <span class="token class-name">WordpressCommand</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Tweets a blog post
     *
     * <span class="token keyword">@synopsis</span> --post-id=&lt;post-id&gt;
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$arguments</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$options</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$postId</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;post-id&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Do something with $postId</span>

        <span class="token class-name static-context">WP_CLI</span><span class="token operator">::</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Tweet sent.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name static-context">WP_CLI</span><span class="token operator">::</span><span class="token function">halt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="requesting-symfony-services-and-parameters" tabindex="-1"><a class="header-anchor" href="#requesting-symfony-services-and-parameters" aria-hidden="true">#</a> Requesting Symfony services and parameters</h2><p>Your command will probably need to call a Symfony service to handle things. In our example, let&#39;s call a <code>Twitter</code> service that will handle the tweet.</p><p>The first step is to register this service as a public service. To do so, simply add it to the list of the public services in <code>/config/packages/sword.yaml</code>:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">sword</span><span class="token punctuation">:</span>
    <span class="token comment"># ...</span>
    <span class="token key atrule">public_services</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> App\\Social\\Twitter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then use it in your command:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">declare</span><span class="token punctuation">(</span>strict_types<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Wordpress<span class="token punctuation">\\</span>Command</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Social<span class="token punctuation">\\</span>Twitter</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Sword<span class="token punctuation">\\</span>SwordBundle<span class="token punctuation">\\</span>Attribute<span class="token punctuation">\\</span>AsWordpressCommand</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Sword<span class="token punctuation">\\</span>SwordBundle<span class="token punctuation">\\</span>Command<span class="token punctuation">\\</span>WordpressCommand</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">WP_CLI</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">Sword<span class="token punctuation">\\</span>SwordBundle<span class="token punctuation">\\</span>Helper<span class="token punctuation">\\</span>get_symfony_service</span><span class="token punctuation">;</span>

<span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">AsWordpressCommand</span><span class="token punctuation">(</span><span class="token attribute-class-name class-name">name</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;tweet&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">TweetCommand</span> <span class="token keyword">extends</span> <span class="token class-name">WordpressCommand</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Tweets a blog post
     *
     * <span class="token keyword">@synopsis</span> --post-id=&lt;post-id&gt;
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$arguments</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$options</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$postId</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;post-id&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">get_symfony_service</span><span class="token punctuation">(</span><span class="token class-name static-context">Twitter</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">tweet</span><span class="token punctuation">(</span><span class="token variable">$postId</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name static-context">WP_CLI</span><span class="token operator">::</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;The tweet cannot be sent.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name static-context">WP_CLI</span><span class="token operator">::</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Tweet sent.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name static-context">WP_CLI</span><span class="token operator">::</span><span class="token function">halt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="calling-your-command" tabindex="-1"><a class="header-anchor" href="#calling-your-command" aria-hidden="true">#</a> Calling your command</h2><p>To call your <code>tweet</code> command, here&#39;s how to call it:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> <span class="token parameter variable">-u</span> <span class="token number">82</span>:82 php bin/console wp tweet --post-id<span class="token operator">=</span><span class="token number">123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),g=n("And if you've aliased as explained "),y=n("here"),w=n(", that will be as short as:"),_=p(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>wp tweet --post-id<span class="token operator">=</span><span class="token number">123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1);function f(C,x){const a=c("RouterLink");return i(),l("div",null,[d,s("p",null,[r,k,m,e(a,{to:"/guide/tutorial/services.html"},{default:t(()=>[v]),_:1}),b]),h,s("p",null,[g,e(a,{to:"/guide/tooling.html#wp-cli"},{default:t(()=>[y]),_:1}),w]),_])}const T=o(u,[["render",f],["__file","commands.html.vue"]]);export{T as default};
