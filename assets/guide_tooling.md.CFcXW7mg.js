import{_ as s,c as i,o as a,a5 as n,a6 as e}from"./chunks/framework.CoNgQsep.js";const u=JSON.parse('{"title":"Tooling","description":"","frontmatter":{},"headers":[],"relativePath":"guide/tooling.md","filePath":"guide/tooling.md","lastUpdated":1711689985000}'),t={name:"guide/tooling.md"},l=n(`<h1 id="tooling" tabindex="-1">Tooling <a class="header-anchor" href="#tooling" aria-label="Permalink to &quot;Tooling&quot;">​</a></h1><p>Sword comes with some tooling to help you manage the development environment.</p><h2 id="php-image" tabindex="-1">PHP image <a class="header-anchor" href="#php-image" aria-label="Permalink to &quot;PHP image&quot;">​</a></h2><p>Assuming you&#39;ve installed Sword using Docker, you&#39;ll get <a href="https://github.com/phpsword/docker-images" target="_blank" rel="noreferrer">PHP images</a> ready for development and production that&#39;s also tailored for Symfony and WordPress.</p><p>The PHP extensions are the same as the one used by the official WordPress image, with the addition of the Redis extension compiled with igbinary (used for faster PHP serialization).</p><div class="warning custom-block"><p class="custom-block-title">MACOS USERS</p><p>Arm64 builds (Apple M1/M2 chips) have redis and igbinary active but not working together due to compatibility issues while compiling.</p></div><p>These images are based on <a href="https://github.com/williarin/docker-images" target="_blank" rel="noreferrer">williarin/docker-images</a> which are automatically built every week with the latest Alpine Linux, PHP and extensions versions.</p><h2 id="redis" tabindex="-1">Redis <a class="header-anchor" href="#redis" aria-label="Permalink to &quot;Redis&quot;">​</a></h2><p>To activate redis in WordPress, the first step is to modify your <code>docker-compose.yml</code> file like this:</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes catppuccin-latte dracula vp-code"><code><span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">services</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">    php</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-dark:#6272A4;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">        # ...</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">        environment</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-dark:#6272A4;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">            # ...</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">            WORDPRESS_REDIS_HOST</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> redis</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">            WORDPRESS_REDIS_PASSWORD</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> ChangeMe</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">            WORDPRESS_CACHE_KEY_SALT</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> ChangeMe</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-dark:#6272A4;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">        # ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-dark:#6272A4;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">    # ...</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">    redis</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">        image</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> redis:alpine</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">        restart</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#E9F284;"> &#39;</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;">no</span><span style="--shiki-light:#40A02B;--shiki-dark:#E9F284;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">        command</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> /bin/sh -c &#39;redis-server --appendonly yes --requirepass $\${REDIS_PASSWORD}&#39;</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">        volumes</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#FF79C6;">            -</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> redis_data:/data</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">        environment</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">            REDIS_PASSWORD</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> ChangeMe</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">volumes</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-dark:#6272A4;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">    # ...</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#8BE9FD;">    redis_data</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">:</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>Then run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes catppuccin-latte dracula vp-code"><code><span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#50FA7B;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">make</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> up</span></span></code></pre></div><p>This will download and reconfigure WordPress to connect to Redis.</p><p>Finally, you need the Redis plugin on WordPress, which can be downloaded and configured with these commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes catppuccin-latte dracula vp-code"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-dark:#6272A4;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"># Download the plugin using Composer</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#50FA7B;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">composer</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> require</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> wpackagist-plugin/redis-cache</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-dark:#6272A4;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"># Import the drop-in into our wp/content/ directory</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#50FA7B;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">cp</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> wp/content/plugins/redis-cache/includes/object-cache.php</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> wp/content/</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-dark:#6272A4;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"># Run WP-CLI command to activate the plugin</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#50FA7B;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">docker</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> compose</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> exec</span><span style="--shiki-light:#40A02B;--shiki-dark:#BD93F9;"> -u</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> 82:82</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> php</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> bin/console</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> wp</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> plugin</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> activate</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> redis-cache</span></span></code></pre></div><p>That&#39;s it. If you go to the Redis plugin options in Settings➔Redis, you should see that the connection is active.</p><p><img src="`+e+'" alt="Redis connection"></p><h2 id="wp-cli" tabindex="-1">WP-CLI <a class="header-anchor" href="#wp-cli" aria-label="Permalink to &quot;WP-CLI&quot;">​</a></h2><p>WP-CLI is runnable through Symfony as a console command. This is how you run the <code>wp</code> command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes catppuccin-latte dracula vp-code"><code><span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#50FA7B;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">docker</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> compose</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> exec</span><span style="--shiki-light:#40A02B;--shiki-dark:#BD93F9;"> -u</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> 82:82</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> php</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> bin/console</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;"> wp</span></span></code></pre></div><p>You don&#39;t need to specify <code>--path</code> as it&#39;s automatically set by the command.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When running WP-CLI commands, it&#39;s recommanded to run them using the www-data user, which is 82 on Alpine Linux.</p><p>For simplicity, you can create an alias in your <code>~/.bashrc</code> file:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes catppuccin-latte dracula vp-code"><code><span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#FF79C6;">alias</span><span style="--shiki-light:#4C4F69;--shiki-dark:#BD93F9;"> wp</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">=</span><span style="--shiki-light:#40A02B;--shiki-dark:#E9F284;">&#39;</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;">docker compose exec -u 82:82 php bin/console wp</span><span style="--shiki-light:#40A02B;--shiki-dark:#E9F284;">&#39;</span></span></code></pre></div></div><h2 id="makefile" tabindex="-1">Makefile <a class="header-anchor" href="#makefile" aria-label="Permalink to &quot;Makefile&quot;">​</a></h2><p>Sword also comes with a handy Makefile with commands to ease working with Docker.</p><p>If you&#39;re unfamiliar with <code>make</code>, it&#39;s a task runner just like the Symfony console, but for your shell.</p><p>Here are the commands you can use by running:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes catppuccin-latte dracula vp-code"><code><span class="line"><span style="--shiki-light:#1E66F5;--shiki-dark:#50FA7B;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">make</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;"> &lt;</span><span style="--shiki-light:#40A02B;--shiki-dark:#F1FA8C;">comman</span><span style="--shiki-light:#4C4F69;--shiki-dark:#F8F8F2;">d</span><span style="--shiki-light:#179299;--shiki-dark:#FF79C6;">&gt;</span></span></code></pre></div><p>App commands:</p><ul><li><code>cc</code> Clear Symfony cache</li><li><code>upgrade</code> Upgrade database after a WordPress upgrade</li><li><code>opcache</code> Clear opcache</li><li><code>acl</code> Reset project files and directories read/write permissions to current user if needed</li></ul><p>Docker commands:</p><ul><li><code>build</code> Build containers</li><li><code>up-build</code> Build containers and run them</li><li><code>up</code> Run containers</li><li><code>stop</code> Stop containers</li><li><code>down</code> Remove containers but keep volumes</li><li><code>remove</code> Remove containers and volumes</li></ul>',31),p=[l];function h(r,o,k,d,c,g){return a(),i("div",null,p)}const F=s(t,[["render",h]]);export{u as __pageData,F as default};
