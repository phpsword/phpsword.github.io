import{_ as r,M as a,p as l,q as i,R as e,t as n,N as o,V as c,a1 as p}from"./framework-5866ffd3.js";const d={},h=e("h1",{id:"installation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),n(" Installation")],-1),u=e("h2",{id:"docker-one-liner-installation-recommended",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker-one-liner-installation-recommended","aria-hidden":"true"},"#"),n(" Docker one-liner installation (recommended)")],-1),_=e("p",null,"To install Sword, you need only Docker to be installed on your host.",-1),m={href:"https://www.docker.com/products/docker-desktop",target:"_blank",rel:"noopener noreferrer"},k=p(`<p>To create a new project, simply replace <code>myproject</code> by the name of your project and run:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">--pull</span><span class="token operator">=</span>always <span class="token parameter variable">-t</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">HOST_PWD</span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$PWD</span>&quot;</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-v</span> <span class="token string">&quot;<span class="token environment constant">$PWD</span>&quot;</span>:/app <span class="token parameter variable">-v</span> /var/run/docker.sock:/var/run/docker.sock <span class="token punctuation">\\</span>
    ghcr.io/phpsword/installer myproject
</code></pre></div>`,2),f={href:"https://myproject.localhost/",target:"_blank",rel:"noopener noreferrer"},b=e("div",{class:"custom-container tip"},[e("p",{class:"custom-container-title"},"NOTE"),e("p",null,"If port 443 is unavailable, the installation process will automatically assign a free port to your app.")],-1),w=e("h2",{id:"windows-linux-wsl-macos-manual-installation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows-linux-wsl-macos-manual-installation","aria-hidden":"true"},"#"),n(" Windows / Linux / WSL / macOS manual installation")],-1),g=e("div",{class:"custom-container warning"},[e("p",{class:"custom-container-title"},"WARNING"),e("p",null,"The manual installation process is a bit complex and has not been tested.")],-1),y=e("p",null,"Requirements to install Sword:",-1),v={href:"https://www.php.net/downloads.php",target:"_blank",rel:"noopener noreferrer"},x=e("code",null,"bcmath",-1),L=e("code",null,"mysqli",-1),N=e("code",null,"exif",-1),T=e("code",null,"imagick",-1),q=e("code",null,"redis",-1),D={href:"https://www.mysql.com/downloads/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://getcomposer.org/download/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://symfony.com/download",target:"_blank",rel:"noopener noreferrer"},j={href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"},I=e("p",null,"If for any reason you don't want to use Docker, try a manual install using these files as guide:",-1),E={href:"https://github.com/phpsword/installer/blob/master/.github/workflows/build.yml#L60:L79",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/phpsword/installer/blob/master/build/docker-entrypoint.sh#L65:L87",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/phpsword/sword-bundle/tree/master/install/docker/nginx",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/phpsword/sword-bundle/blob/master/install/docker-compose.yml#L12:L27",target:"_blank",rel:"noopener noreferrer"};function C(B,O){const t=a("ExternalLinkIcon"),s=a("RouterLink");return l(),i("div",null,[h,u,_,e("p",null,[n("You don't need to be familiar with Docker. Everything is taken care of for you. "),e("a",m,[n("Just download and install it"),o(t)]),n(".")]),k,e("p",null,[n("Wait a couple of minutes. Done! Now visit "),e("a",f,[n("https://myproject.localhost/"),o(t)]),n(" to access WordPress installation page.")]),b,e("p",null,[n("You can now check the "),o(s,{to:"/guide/tutorial/first-steps.html"},{default:c(()=>[n("tutorial")]),_:1}),n(" to understand the basics.")]),w,g,y,e("ul",null,[e("li",null,[e("a",v,[n("PHP 8.1"),o(t)]),n(" or above, with "),x,n(", "),L,n(", "),N,n(" and "),T,n(" extensions ("),q,n(" too if you want to use redis)")]),e("li",null,[e("a",D,[n("MySQL 8.0"),o(t)]),n(" or above")]),e("li",null,[e("a",S,[n("Composer 2"),o(t)])]),e("li",null,[e("a",W,[n("Symfony CLI executable"),o(t)])]),e("li",null,[e("a",j,[n("Nginx"),o(t)])])]),I,e("ul",null,[e("li",null,[e("a",E,[n("The installer project build"),o(t)])]),e("li",null,[e("a",P,[n("The installer install script"),o(t)])]),e("li",null,[e("a",R,[n("The Nginx configuration"),o(t)]),n(" configured to be behind Traefik reverse-proxy")]),e("li",null,[e("a",V,[n("Environment variables"),o(t)])])])])}const M=r(d,[["render",C],["__file","installation.html.vue"]]);export{M as default};
