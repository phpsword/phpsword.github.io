import{_ as t,r as e,o,c as p,a as n,b as i,d as s,e as c}from"./app.9dc8c99a.js";const l={},r=n("h1",{id:"database-queries",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#database-queries","aria-hidden":"true"},"#"),s(" Database queries")],-1),u=n("p",null,[s("In a classic WordPress theme, you would make calls to the database using "),n("code",null,"WP_Query"),s(".")],-1),d=n("p",null,"While Sword obviously doesn't remove this functionality, it provides an additional abstraction layer to query the database entities with a Doctrine-like syntax.",-1),k={class:"custom-container tip"},v=n("p",{class:"custom-container-title"},"TIP",-1),m=s("The full documentation for this library can be found on the dedicated Github repo: "),g={href:"https://github.com/williarin/wordpress-interop",target:"_blank",rel:"noopener noreferrer"},b=s("williarin/wordpress-interop"),h=s("."),_=c(`<p>To use it in Sword, just inject <code>Williarin\\WordpressInterop\\EntityManagerInterface</code> in your service, or any repository as below:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token comment">// ...</span>
<span class="token keyword">use</span> <span class="token package">Williarin<span class="token punctuation">\\</span>WordpressInterop<span class="token punctuation">\\</span>Bridge<span class="token punctuation">\\</span>Repository<span class="token punctuation">\\</span>PostRepository</span><span class="token punctuation">;</span>

<span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">SomeShortcode</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractWordpressService</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span>
        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name type-declaration">PostRepository</span> <span class="token variable">$postRepository</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token function">add_shortcode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;some_shortcode&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token variable">$this</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;renderShortcode&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">renderShortcode</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>

        <span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token function">shortcode_atts</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;term&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Travel&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;per_page&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;4&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$posts</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">postRepository</span><span class="token operator">-&gt;</span><span class="token function">findBy</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token keyword">new</span> <span class="token class-name">TermRelationshipCondition</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;taxonomy&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;tag&#39;</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$parameters</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;term&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;post_status&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;publish&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;comment_count&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;DESC&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;post_date&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;DESC&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$parameters</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;per_page&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function y(f,w){const a=e("ExternalLinkIcon");return o(),p("div",null,[r,u,d,n("div",k,[v,n("p",null,[m,n("a",g,[b,i(a)]),h])]),_])}const x=t(l,[["render",y],["__file","database-queries.html.vue"]]);export{x as default};
